{"version":3,"sources":["components/Profile.tsx","components/ProfileList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Profile","profile","vac","overwatch","console","log","TableRow","TableCell","align","Avatar","src","avatar","className","variant","href","profileUrl","target","userName","dayjs","encountered","format","comment","matchUrl","Tooltip","title","Math","ceil","Date","getTime","banDate","steamId","ProfileList","list","headline","useState","toggleVac","setToggleVac","countBanned","filter","e","length","style","padding","Typography","marginBottom","FormControlLabel","float","marginRight","control","Checkbox","checked","onChange","name","color","label","TableContainer","component","Paper","Table","size","TableHead","width","TableBody","sort","a","b","map","p","v4","theme","createMuiTheme","palette","primary","red","secondary","green","App","data","setData","loading","setLoading","useEffect","fetch","headers","then","r","json","catch","error","ThemeProvider","LinearProgress","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2edb972a.chunk.js","sourcesContent":["import { Avatar, TableCell, TableRow, Tooltip } from '@material-ui/core'\nimport React from 'react'\nimport { PlayerProfile } from '../App'\nimport './Profile.css'\nimport dayjs from 'dayjs'\n\nexport const Profile = ({ profile }: { profile: PlayerProfile }) => {\n  if (profile.vac || profile.overwatch) {\n    console.log(profile)\n  }\n\n  return (\n    <TableRow key={profile.steamId}>\n      <TableCell align=\"left\">\n        <Avatar src={profile.avatar} className=\"avatar\" variant=\"rounded\"></Avatar>\n      </TableCell>\n      <TableCell align=\"left\">\n        <a href={profile.profileUrl} target=\"blank\">\n          {profile.userName}\n        </a>\n      </TableCell>\n      <TableCell align=\"left\">{dayjs(profile.encountered).format('DD.MM.YYYY HH:mm:ss')}</TableCell>\n      <TableCell align=\"left\">{profile.comment}</TableCell>\n      <TableCell align=\"left\">\n        <a href={profile.matchUrl} target=\"blank\">\n          {profile.matchUrl}\n        </a>\n      </TableCell>\n      <TableCell align=\"left\">\n        {profile.vac || profile.overwatch ? (\n          <Tooltip\n            title={\n              Math.ceil((new Date().getTime() - new Date(profile.banDate).getTime()) / 1000 / 60 / 60 / 24) +\n              ' days since last ban'\n            }\n          >\n            <span className=\"ban\">{profile.vac ? 'VAC' : 'Overwatch'}</span>\n          </Tooltip>\n        ) : (\n          ''\n        )}\n      </TableCell>\n    </TableRow>\n  )\n}\n","import { PlayerProfile } from '../App'\nimport { Profile } from './Profile'\nimport { v4 } from 'uuid'\nimport {\n  Paper,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Checkbox,\n  FormControlLabel,\n  Typography,\n} from '@material-ui/core'\nimport { ToggleButton } from '@material-ui/lab'\nimport React, { useState } from 'react'\n\nexport const ProfileList = ({ list, headline }: { list: PlayerProfile[]; headline: string }) => {\n  const [toggleVac, setToggleVac] = useState(false)\n\n  const countBanned = list.filter((e) => e.vac || e.overwatch).length\n\n  if (toggleVac) {\n    list = list.filter((e) => e.vac || e.overwatch)\n  }\n\n  return (\n    <div style={{ padding: '10px' }}>\n      <Typography variant=\"h4\" style={{ marginBottom: 20 }}>\n        {headline}\n      </Typography>\n      {countBanned > 0 && (\n        <FormControlLabel\n          style={{ float: 'right', marginRight: 0 }}\n          control={\n            <Checkbox checked={toggleVac} onChange={() => setToggleVac(!toggleVac)} name=\"checkedB\" color=\"primary\" />\n          }\n          label={'Zeige ' + countBanned + ' gebannt(e) Profile an.'}\n        />\n      )}\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell style={{ width: '15px' }}></TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Datum</TableCell>\n              <TableCell>Kommentar</TableCell>\n              <TableCell>Match URL</TableCell>\n              <TableCell>Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {list\n              .sort((a, b) => {\n                return new Date(b.encountered).getTime() - new Date(a.encountered).getTime()\n              })\n              .map((p) => (\n                <Profile key={v4()} profile={p}></Profile>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import { createMuiTheme, ThemeProvider, Typography } from '@material-ui/core'\nimport { green, purple, red } from '@material-ui/core/colors'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport React, { useEffect, useState } from 'react'\nimport './App.css'\nimport { ProfileList } from './components/ProfileList'\n\nexport interface PlayerProfile {\n  _id: string\n  steamId: string\n  profileUrl: string\n  matchUrl: string\n  userName: string\n  avatar: string\n  lastBanCheck: Date\n  vac: boolean\n  overwatch: boolean\n  type: 'obv' | 'maybe'\n  createdAt: Date\n  updatedAt: Date\n  encountered: Date\n  banDate: Date\n  comment: string\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: red,\n    secondary: green,\n  },\n})\n\nfunction App() {\n  const [data, setData] = useState<PlayerProfile[]>([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    fetch('https://dazzling-minsky-b2c2da.netlify.app/.netlify/functions/api/profiles', {\n      headers: { 'Cache-Control': 'no-store, no-cache' },\n    })\n      .then((r) => r.json())\n      .then((r) => {\n        setData(r)\n        setLoading(false)\n      })\n      .catch((error) => console.log(error))\n  }, [])\n\n  return (\n    <div className=\"root\">\n      <ThemeProvider theme={theme}>\n        {loading && <LinearProgress />}\n        <div className=\"App\">\n          <ProfileList list={data.filter((p) => p.type === 'obv')} headline=\"Obvious\"></ProfileList>\n          <ProfileList list={data.filter((p) => p.type === 'maybe')} headline=\"Vielleicht\"></ProfileList>\n        </div>\n        <a href=\"https://app.financl.com\">Financl</a>\n      </ThemeProvider>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}