{"version":3,"sources":["components/Profile.tsx","components/ProfileList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Profile","profile","TableRow","TableCell","align","Avatar","src","avatar","className","variant","href","profileUrl","target","userName","dayjs","encountered","format","matchUrl","vac","overwatch","Tooltip","title","daysSinceLastBan","steamId","ProfileList","list","ToggleButton","value","TableContainer","component","Paper","Table","size","TableHead","style","width","TableBody","sort","a","b","Date","getTime","map","p","v4","theme","createMuiTheme","palette","primary","purple","secondary","green","App","useState","data","setData","loading","setLoading","useEffect","fetch","headers","then","r","json","catch","error","console","log","ThemeProvider","LinearProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wWAMaA,EAAU,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,QACxB,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,MAAM,OAAjB,SACE,cAACC,EAAA,EAAD,CAAQC,IAAKL,EAAQM,OAAQC,UAAU,SAASC,QAAQ,cAE1D,cAACN,EAAA,EAAD,CAAWC,MAAM,OAAjB,SACE,mBAAGM,KAAMT,EAAQU,WAAYC,OAAO,QAApC,SACGX,EAAQY,aAGb,cAACV,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBU,IAAMb,EAAQc,aAAaC,OAAO,yBAC3D,cAACb,EAAA,EAAD,CAAWC,MAAM,OAAjB,SACE,mBAAGM,KAAMT,EAAQgB,SAAUL,OAAO,QAAlC,SACGX,EAAQgB,aAGb,cAACd,EAAA,EAAD,CAAWC,MAAM,OAAjB,SACGH,EAAQiB,KAAOjB,EAAQkB,UACtB,cAACC,EAAA,EAAD,CAASC,MAAOpB,EAAQqB,iBAAmB,uBAA3C,SACE,sBAAMd,UAAU,MAAhB,SAAuBP,EAAQiB,IAAM,MAAQ,gBAG/C,OArBSjB,EAAQsB,U,wDCDdC,EAAc,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAC5B,OACE,gCACE,cAACC,EAAA,EAAD,CAAcC,MAAM,KACpB,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,KAAK,QAAZ,UACE,cAACC,EAAA,EAAD,UACE,eAAC/B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW+B,MAAO,CAAEC,MAAO,UAC3B,cAAChC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,wBACA,cAACA,EAAA,EAAD,0BAGJ,cAACiC,EAAA,EAAD,UACGX,EACEY,MAAK,SAACC,EAAGC,GACR,OAAO,IAAIC,KAAKD,EAAExB,aAAa0B,UAAY,IAAID,KAAKF,EAAEvB,aAAa0B,aAEpEC,KAAI,SAACC,GAAD,OACH,cAAC,EAAD,CAAoB1C,QAAS0C,GAAfC,8BCJxBC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAASC,IACTC,UAAWC,OAiCAC,MA7Bf,WAAgB,IAAD,EACWC,mBAA0B,IADrC,mBACNC,EADM,KACAC,EADA,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,KAiBb,OAbAC,qBAAU,WACRD,GAAW,GACXE,MAAM,6EAA8E,CAClFC,QAAS,CAAE,gBAAiB,wBAE3BC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GACLP,EAAQO,GACRL,GAAW,MAEZO,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,IAGD,qBAAKzD,UAAU,OAAf,SACE,eAAC4D,EAAA,EAAD,CAAevB,MAAOA,EAAtB,UACGW,GAAW,cAACa,EAAA,EAAD,IACZ,qBAAK7D,UAAU,MAAf,SACE,cAAC,EAAD,CAAaiB,KAAM6B,YCvCdgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.17c1405c.chunk.js","sourcesContent":["import { Avatar, TableCell, TableRow, Tooltip } from '@material-ui/core'\nimport React from 'react'\nimport { PlayerProfile } from '../App'\nimport './Profile.css'\nimport dayjs from 'dayjs'\n\nexport const Profile = ({ profile }: { profile: PlayerProfile }) => {\n  return (\n    <TableRow key={profile.steamId}>\n      <TableCell align=\"left\">\n        <Avatar src={profile.avatar} className=\"avatar\" variant=\"rounded\"></Avatar>\n      </TableCell>\n      <TableCell align=\"left\">\n        <a href={profile.profileUrl} target=\"blank\">\n          {profile.userName}\n        </a>\n      </TableCell>\n      <TableCell align=\"left\">{dayjs(profile.encountered).format('DD.MM.YYYY HH:mm:ss')}</TableCell>\n      <TableCell align=\"left\">\n        <a href={profile.matchUrl} target=\"blank\">\n          {profile.matchUrl}\n        </a>\n      </TableCell>\n      <TableCell align=\"left\">\n        {profile.vac || profile.overwatch ? (\n          <Tooltip title={profile.daysSinceLastBan + ' days since last ban'}>\n            <span className=\"ban\">{profile.vac ? 'VAC' : 'Overwatch'}</span>\n          </Tooltip>\n        ) : (\n          ''\n        )}\n      </TableCell>\n    </TableRow>\n  )\n}\n","import { PlayerProfile } from '../App'\nimport { Profile } from './Profile'\nimport { v4 } from 'uuid'\nimport { Paper, Table, TableContainer, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core'\nimport { ToggleButton } from '@material-ui/lab'\nimport React from 'react'\n\nexport const ProfileList = ({ list }: { list: PlayerProfile[] }) => {\n  return (\n    <div>\n      <ToggleButton value=\"\"></ToggleButton>\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell style={{ width: '15px' }}></TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Match URL</TableCell>\n              <TableCell>Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {list\n              .sort((a, b) => {\n                return new Date(b.encountered).getTime() - new Date(a.encountered).getTime()\n              })\n              .map((p) => (\n                <Profile key={v4()} profile={p}></Profile>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import { createMuiTheme, ThemeProvider } from '@material-ui/core'\nimport { green, purple } from '@material-ui/core/colors'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport React, { useEffect, useState } from 'react'\nimport './App.css'\nimport { ProfileList } from './components/ProfileList'\n\nexport interface PlayerProfile {\n  _id: string\n  steamId: string\n  profileUrl: string\n  matchUrl: string\n  userName: string\n  avatar: string\n  lastBanCheck: Date\n  vac: boolean\n  overwatch: boolean\n  type: 'obv' | 'maybe'\n  createdAt: Date\n  updatedAt: Date\n  encountered: Date\n  daysSinceLastBan: number\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: purple,\n    secondary: green,\n  },\n})\n\nfunction App() {\n  const [data, setData] = useState<PlayerProfile[]>([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    fetch('https://dazzling-minsky-b2c2da.netlify.app/.netlify/functions/api/profiles', {\n      headers: { 'Cache-Control': 'no-store, no-cache' },\n    })\n      .then((r) => r.json())\n      .then((r) => {\n        setData(r)\n        setLoading(false)\n      })\n      .catch((error) => console.log(error))\n  }, [])\n\n  return (\n    <div className=\"root\">\n      <ThemeProvider theme={theme}>\n        {loading && <LinearProgress />}\n        <div className=\"App\">\n          <ProfileList list={data}></ProfileList>\n        </div>\n      </ThemeProvider>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}